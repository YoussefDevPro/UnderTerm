name: Cross-platform Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os-name: Linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl

          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Linux Build Steps using Nix ---
      - name: Install Nix
        if: runner.os == 'Linux'
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.11

      - name: Build with Nix
        if: runner.os == 'Linux'
        run: |
          nix-shell --run "cargo build --release --target ${{ matrix.platform.target }} --bin under_term"

      # --- Non-Linux Build Steps (Unchanged) ---
      - name: Build binary (Windows/macOS)
        if: runner.os != 'Linux'
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release --bin under_term"
          strip: true
        env:
          AWS_LC_SYS_CMAKE_BUILDER: 1

      # This step remains the same for all platforms
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: underterm
          target: ${{ matrix.platform.target }}
          changes-file: ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}